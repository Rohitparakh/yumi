{"ast":null,"code":"var _jsxFileName = \"/Users/rohitparakh/Downloads/Furukami/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport Slideshow from \"./components/Slideshow\";\nimport Connect from \"./components/Connect\";\nimport './App.css';\nimport MainSection from \"./components/MainSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst truncate = (input, len) => input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const blockchain = useSelector(state => state.blockchain);\n  const data = useSelector(state => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods.mint(mintAmount).send({\n      gasLimit: String(totalGasLimit),\n      to: CONFIG.CONTRACT_ADDRESS,\n      from: blockchain.account,\n      value: totalCostWei\n    }).once(\"error\", err => {\n      console.log(err);\n      setFeedback(\"Sorry, something went wrong please try again later.\");\n      setClaimingNft(false);\n    }).then(receipt => {\n      console.log(receipt);\n      setFeedback(`WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`);\n      setClaimingNft(false);\n      dispatch(fetchData(blockchain.account));\n    });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n\n    if (newMintAmount > 20) {\n      newMintAmount = 20;\n    }\n\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n  return (\n    /*#__PURE__*/\n    // <s.Screen>\n    //   <s.Container\n    //     flex={1}\n    //     ai={\"center\"}\n    //     style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n    //     image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n    //   >\n    //     <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n    //     <s.SpacerSmall />\n    //     <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n    //       <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n    //         <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\n    //       </s.Container>\n    //       <s.SpacerLarge />\n    //       <s.Container\n    //         flex={2}\n    //         jc={\"center\"}\n    //         ai={\"center\"}\n    //         style={{\n    //           backgroundColor: \"var(--accent)\",\n    //           padding: 24,\n    //           borderRadius: 24,\n    //           border: \"4px dashed var(--secondary)\",\n    //           boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n    //         }}\n    //       >\n    //         <s.TextTitle\n    //           style={{\n    //             textAlign: \"center\",\n    //             fontSize: 50,\n    //             fontWeight: \"bold\",\n    //             color: \"var(--accent-text)\",\n    //           }}\n    //         >\n    //           {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n    //         </s.TextTitle>\n    //         <s.TextDescription\n    //           style={{\n    //             textAlign: \"center\",\n    //             color: \"var(--primary-text)\",\n    //           }}\n    //         >\n    //           <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n    //             {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n    //           </StyledLink>\n    //         </s.TextDescription>\n    //         <s.SpacerSmall />\n    //         {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n    //           <>\n    //             <s.TextTitle\n    //               style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n    //             >\n    //               The sale has ended.\n    //             </s.TextTitle>\n    //             <s.TextDescription\n    //               style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n    //             >\n    //               You can still find {CONFIG.NFT_NAME} on\n    //             </s.TextDescription>\n    //             <s.SpacerSmall />\n    //             <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n    //               {CONFIG.MARKETPLACE}\n    //             </StyledLink>\n    //           </>\n    //         ) : (\n    //           <>\n    //             <s.TextTitle\n    //               style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n    //             >\n    //               1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\n    //               {CONFIG.NETWORK.SYMBOL}.\n    //             </s.TextTitle>\n    //             <s.SpacerXSmall />\n    //             <s.TextDescription\n    //               style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n    //             >\n    //               Excluding gas fees.\n    //             </s.TextDescription>\n    //             <s.SpacerSmall />\n    //             {blockchain.account === \"\" ||\n    //             blockchain.smartContract === null ? (\n    //               <s.Container ai={\"center\"} jc={\"center\"}>\n    //                 <s.TextDescription\n    //                   style={{\n    //                     textAlign: \"center\",\n    //                     color: \"var(--accent-text)\",\n    //                   }}\n    //                 >\n    //                   Connect to the {CONFIG.NETWORK.NAME} network\n    //                 </s.TextDescription>\n    //                 <s.SpacerSmall />\n    //                 <StyledButton\n    //                   onClick={(e) => {\n    //                     e.preventDefault();\n    //                     dispatch(connect());\n    //                     getData();\n    //                   }}\n    //                 >\n    //                   CONNECT\n    //                 </StyledButton>\n    //                 {blockchain.errorMsg !== \"\" ? (\n    //                   <>\n    //                     <s.SpacerSmall />\n    //                     <s.TextDescription\n    //                       style={{\n    //                         textAlign: \"center\",\n    //                         color: \"var(--accent-text)\",\n    //                       }}\n    //                     >\n    //                       {blockchain.errorMsg}\n    //                     </s.TextDescription>\n    //                   </>\n    //                 ) : null}\n    //               </s.Container>\n    //             ) : (\n    //               <>\n    //                 <s.TextDescription\n    //                   style={{\n    //                     textAlign: \"center\",\n    //                     color: \"var(--accent-text)\",\n    //                   }}\n    //                 >\n    //                   {feedback}\n    //                 </s.TextDescription>\n    //                 <s.SpacerMedium />\n    //                 <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n    //                   <StyledRoundButton\n    //                     style={{ lineHeight: 0.4 }}\n    //                     disabled={claimingNft ? 1 : 0}\n    //                     onClick={(e) => {\n    //                       e.preventDefault();\n    //                       decrementMintAmount();\n    //                     }}\n    //                   >\n    //                     -\n    //                   </StyledRoundButton>\n    //                   <s.SpacerMedium />\n    //                   <s.TextDescription\n    //                     style={{\n    //                       textAlign: \"center\",\n    //                       color: \"var(--accent-text)\",\n    //                     }}\n    //                   >\n    //                     {mintAmount}\n    //                   </s.TextDescription>\n    //                   <s.SpacerMedium />\n    //                   <StyledRoundButton\n    //                     disabled={claimingNft ? 1 : 0}\n    //                     onClick={(e) => {\n    //                       e.preventDefault();\n    //                       incrementMintAmount();\n    //                     }}\n    //                   >\n    //                     +\n    //                   </StyledRoundButton>\n    //                 </s.Container>\n    //                 <s.SpacerSmall />\n    //                 <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n    //                   <StyledButton\n    //                     disabled={claimingNft ? 1 : 0}\n    //                     onClick={(e) => {\n    //                       e.preventDefault();\n    //                       claimNFTs();\n    //                       getData();\n    //                     }}\n    //                   >\n    //                     {claimingNft ? \"Minting\" : \"Mint\"}\n    //                   </StyledButton>\n    //                 </s.Container>\n    //               </>\n    //             )}\n    //           </>\n    //         )}\n    //         <s.SpacerMedium />\n    //       </s.Container>\n    //       <s.SpacerLarge />\n    //       <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n    //         <StyledImg\n    //           alt={\"example\"}\n    //           src={\"/config/images/example.gif\"}\n    //           style={{ transform: \"scaleX(-1)\" }}\n    //         />\n    //       </s.Container>\n    //     </ResponsiveWrapper>\n    //     <s.SpacerMedium />\n    //     <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n    //       <s.TextDescription\n    //         style={{\n    //           textAlign: \"center\",\n    //           color: \"var(--primary-text)\",\n    //         }}\n    //       >\n    //         Furukami is the collection of 5555 flowers that will scent the memories come alive!.\n    //       </s.TextDescription>\n    //       <s.SpacerSmall />\n    //       <s.TextDescription\n    //         style={{\n    //           textAlign: \"center\",\n    //           color: \"var(--primary-text)\",\n    //         }}\n    //       >\n    //         You can mint upto 10 Furukami Flower NFT per transaction, max upto 20 per wallet.\n    //       </s.TextDescription>\n    //     </s.Container>\n    //   </s.Container>\n    // </s.Screen>\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MainSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n}\n\n_s(App, \"udyIWv1XkBniER8lAfsVM97dbrk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/rohitparakh/Downloads/Furukami/src/App.js"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","connect","fetchData","s","styled","Header","Slideshow","Connect","MainSection","truncate","input","len","length","substring","StyledButton","button","StyledRoundButton","ResponsiveWrapper","div","StyledLogo","img","StyledImg","StyledLink","a","App","dispatch","blockchain","state","data","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONFIG","SET_CONFIG","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","claimNFTs","cost","gasLimit","totalCostWei","String","totalGasLimit","console","log","smartContract","methods","mint","send","to","from","account","value","once","err","then","receipt","decrementMintAmount","newMintAmount","incrementMintAmount","getData","getConfig","configResponse","fetch","headers","Accept","config","json"],"mappings":"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AA6B,IAA9D,EAAoE;AAClElC,MAAAA,QAAQ,CAACvB,SAAS,CAACwB,UAAU,CAACuC,OAAZ,CAAV,CAAR;AACD;AACF,GAJD;;AAMA,QAAMU,SAAS,GAAG,YAAY;AAC5B,UAAMC,cAAc,GAAG,MAAMC,KAAK,CAAC,qBAAD,EAAwB;AACxDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,MAAM,EAAE;AAFD;AAD+C,KAAxB,CAAlC;AAMA,UAAMC,MAAM,GAAG,MAAMJ,cAAc,CAACK,IAAf,EAArB;AACA7C,IAAAA,UAAU,CAAC4C,MAAD,CAAV;AACD,GATD;;AAWApF,EAAAA,SAAS,CAAC,MAAM;AACd+E,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA/E,EAAAA,SAAS,CAAC,MAAM;AACd8E,IAAAA,OAAO;AACR,GAFQ,EAEN,CAAChD,UAAU,CAACuC,OAAZ,CAFM,CAAT;AAIA;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AA/MF;AAoND;;GAvTQzC,G;UACUzB,W,EACEC,W,EACNA,W;;;KAHNwB,G;AAyTT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport Header from \"./components/Header\";\r\nimport Slideshow from \"./components/Slideshow\";\r\nimport Connect from \"./components/Connect\";\r\nimport './App.css';\r\nimport MainSection from \"./components/MainSection\";\r\n\r\nconst truncate = (input, len) =>\r\n  input.length > len ? `${input.substring(0, len)}...` : input;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: var(--secondary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: var(--secondary-text);\r\n  width: 100px;\r\n  cursor: pointer;\r\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const StyledRoundButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 100%;\r\n  border: none;\r\n  background-color: var(--primary);\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  font-size: 15px;\r\n  color: var(--primary-text);\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\r\n  border: 4px dashed var(--secondary);\r\n  background-color: var(--accent);\r\n  border-radius: 100%;\r\n  width: 200px;\r\n  @media (min-width: 900px) {\r\n    width: 250px;\r\n  }\r\n  @media (min-width: 1000px) {\r\n    width: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n`;\r\n\r\nexport const StyledLink = styled.a`\r\n  color: var(--secondary);\r\n  text-decoration: none;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\r\n  const [mintAmount, setMintAmount] = useState(1);\r\n  const [CONFIG, SET_CONFIG] = useState({\r\n    CONTRACT_ADDRESS: \"\",\r\n    SCAN_LINK: \"\",\r\n    NETWORK: {\r\n      NAME: \"\",\r\n      SYMBOL: \"\",\r\n      ID: 0,\r\n    },\r\n    NFT_NAME: \"\",\r\n    SYMBOL: \"\",\r\n    MAX_SUPPLY: 1,\r\n    WEI_COST: 0,\r\n    DISPLAY_COST: 0,\r\n    GAS_LIMIT: 0,\r\n    MARKETPLACE: \"\",\r\n    MARKETPLACE_LINK: \"\",\r\n    SHOW_BACKGROUND: false,\r\n  });\r\n\r\n  const claimNFTs = () => {\r\n    let cost = CONFIG.WEI_COST;\r\n    let gasLimit = CONFIG.GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(mintAmount)\r\n      .send({\r\n        gasLimit: String(totalGasLimit),\r\n        to: CONFIG.CONTRACT_ADDRESS,\r\n        from: blockchain.account,\r\n        value: totalCostWei,\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"Sorry, something went wrong please try again later.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        console.log(receipt);\r\n        setFeedback(\r\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const decrementMintAmount = () => {\r\n    let newMintAmount = mintAmount - 1;\r\n    if (newMintAmount < 1) {\r\n      newMintAmount = 1;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const incrementMintAmount = () => {\r\n    let newMintAmount = mintAmount + 1;\r\n    if (newMintAmount > 20) {\r\n      newMintAmount = 20;\r\n    }\r\n    setMintAmount(newMintAmount);\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  const getConfig = async () => {\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const config = await configResponse.json();\r\n    SET_CONFIG(config);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getConfig();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    // <s.Screen>\r\n    //   <s.Container\r\n    //     flex={1}\r\n    //     ai={\"center\"}\r\n    //     style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\r\n    //     image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\r\n    //   >\r\n    //     <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\r\n    //     <s.SpacerSmall />\r\n    //     <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\r\n    //       <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n    //         <StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />\r\n    //       </s.Container>\r\n    //       <s.SpacerLarge />\r\n    //       <s.Container\r\n    //         flex={2}\r\n    //         jc={\"center\"}\r\n    //         ai={\"center\"}\r\n    //         style={{\r\n    //           backgroundColor: \"var(--accent)\",\r\n    //           padding: 24,\r\n    //           borderRadius: 24,\r\n    //           border: \"4px dashed var(--secondary)\",\r\n    //           boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\r\n    //         }}\r\n    //       >\r\n    //         <s.TextTitle\r\n    //           style={{\r\n    //             textAlign: \"center\",\r\n    //             fontSize: 50,\r\n    //             fontWeight: \"bold\",\r\n    //             color: \"var(--accent-text)\",\r\n    //           }}\r\n    //         >\r\n    //           {data.totalSupply} / {CONFIG.MAX_SUPPLY}\r\n    //         </s.TextTitle>\r\n    //         <s.TextDescription\r\n    //           style={{\r\n    //             textAlign: \"center\",\r\n    //             color: \"var(--primary-text)\",\r\n    //           }}\r\n    //         >\r\n    //           <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\r\n    //             {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\r\n    //           </StyledLink>\r\n    //         </s.TextDescription>\r\n    //         <s.SpacerSmall />\r\n    //         {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\r\n    //           <>\r\n    //             <s.TextTitle\r\n    //               style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n    //             >\r\n    //               The sale has ended.\r\n    //             </s.TextTitle>\r\n    //             <s.TextDescription\r\n    //               style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n    //             >\r\n    //               You can still find {CONFIG.NFT_NAME} on\r\n    //             </s.TextDescription>\r\n    //             <s.SpacerSmall />\r\n    //             <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\r\n    //               {CONFIG.MARKETPLACE}\r\n    //             </StyledLink>\r\n    //           </>\r\n    //         ) : (\r\n    //           <>\r\n    //             <s.TextTitle\r\n    //               style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n    //             >\r\n    //               1 {CONFIG.SYMBOL} costs {CONFIG.DISPLAY_COST}{\" \"}\r\n    //               {CONFIG.NETWORK.SYMBOL}.\r\n    //             </s.TextTitle>\r\n    //             <s.SpacerXSmall />\r\n    //             <s.TextDescription\r\n    //               style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\r\n    //             >\r\n    //               Excluding gas fees.\r\n    //             </s.TextDescription>\r\n    //             <s.SpacerSmall />\r\n    //             {blockchain.account === \"\" ||\r\n    //             blockchain.smartContract === null ? (\r\n    //               <s.Container ai={\"center\"} jc={\"center\"}>\r\n    //                 <s.TextDescription\r\n    //                   style={{\r\n    //                     textAlign: \"center\",\r\n    //                     color: \"var(--accent-text)\",\r\n    //                   }}\r\n    //                 >\r\n    //                   Connect to the {CONFIG.NETWORK.NAME} network\r\n    //                 </s.TextDescription>\r\n    //                 <s.SpacerSmall />\r\n    //                 <StyledButton\r\n    //                   onClick={(e) => {\r\n    //                     e.preventDefault();\r\n    //                     dispatch(connect());\r\n    //                     getData();\r\n    //                   }}\r\n    //                 >\r\n    //                   CONNECT\r\n    //                 </StyledButton>\r\n    //                 {blockchain.errorMsg !== \"\" ? (\r\n    //                   <>\r\n    //                     <s.SpacerSmall />\r\n    //                     <s.TextDescription\r\n    //                       style={{\r\n    //                         textAlign: \"center\",\r\n    //                         color: \"var(--accent-text)\",\r\n    //                       }}\r\n    //                     >\r\n    //                       {blockchain.errorMsg}\r\n    //                     </s.TextDescription>\r\n    //                   </>\r\n    //                 ) : null}\r\n    //               </s.Container>\r\n    //             ) : (\r\n    //               <>\r\n    //                 <s.TextDescription\r\n    //                   style={{\r\n    //                     textAlign: \"center\",\r\n    //                     color: \"var(--accent-text)\",\r\n    //                   }}\r\n    //                 >\r\n    //                   {feedback}\r\n    //                 </s.TextDescription>\r\n    //                 <s.SpacerMedium />\r\n    //                 <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n    //                   <StyledRoundButton\r\n    //                     style={{ lineHeight: 0.4 }}\r\n    //                     disabled={claimingNft ? 1 : 0}\r\n    //                     onClick={(e) => {\r\n    //                       e.preventDefault();\r\n    //                       decrementMintAmount();\r\n    //                     }}\r\n    //                   >\r\n    //                     -\r\n    //                   </StyledRoundButton>\r\n    //                   <s.SpacerMedium />\r\n    //                   <s.TextDescription\r\n    //                     style={{\r\n    //                       textAlign: \"center\",\r\n    //                       color: \"var(--accent-text)\",\r\n    //                     }}\r\n    //                   >\r\n    //                     {mintAmount}\r\n    //                   </s.TextDescription>\r\n    //                   <s.SpacerMedium />\r\n    //                   <StyledRoundButton\r\n    //                     disabled={claimingNft ? 1 : 0}\r\n    //                     onClick={(e) => {\r\n    //                       e.preventDefault();\r\n    //                       incrementMintAmount();\r\n    //                     }}\r\n    //                   >\r\n    //                     +\r\n    //                   </StyledRoundButton>\r\n    //                 </s.Container>\r\n    //                 <s.SpacerSmall />\r\n    //                 <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n    //                   <StyledButton\r\n    //                     disabled={claimingNft ? 1 : 0}\r\n    //                     onClick={(e) => {\r\n    //                       e.preventDefault();\r\n    //                       claimNFTs();\r\n    //                       getData();\r\n    //                     }}\r\n    //                   >\r\n    //                     {claimingNft ? \"Minting\" : \"Mint\"}\r\n    //                   </StyledButton>\r\n    //                 </s.Container>\r\n    //               </>\r\n    //             )}\r\n    //           </>\r\n    //         )}\r\n    //         <s.SpacerMedium />\r\n    //       </s.Container>\r\n    //       <s.SpacerLarge />\r\n    //       <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n    //         <StyledImg\r\n    //           alt={\"example\"}\r\n    //           src={\"/config/images/example.gif\"}\r\n    //           style={{ transform: \"scaleX(-1)\" }}\r\n    //         />\r\n    //       </s.Container>\r\n    //     </ResponsiveWrapper>\r\n    //     <s.SpacerMedium />\r\n    //     <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n    //       <s.TextDescription\r\n    //         style={{\r\n    //           textAlign: \"center\",\r\n    //           color: \"var(--primary-text)\",\r\n    //         }}\r\n    //       >\r\n    //         Furukami is the collection of 5555 flowers that will scent the memories come alive!.\r\n    //       </s.TextDescription>\r\n    //       <s.SpacerSmall />\r\n    //       <s.TextDescription\r\n    //         style={{\r\n    //           textAlign: \"center\",\r\n    //           color: \"var(--primary-text)\",\r\n    //         }}\r\n    //       >\r\n    //         You can mint upto 10 Furukami Flower NFT per transaction, max upto 20 per wallet.\r\n    //       </s.TextDescription>\r\n    //     </s.Container>\r\n    //   </s.Container>\r\n    // </s.Screen>\r\n    <>\r\n      <Header/>\r\n      <MainSection/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}